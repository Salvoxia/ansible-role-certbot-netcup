---
- name: "Assert variables"
  ansible.builtin.include_tasks: assert.yml

- name: Create letsencrypt folder - sudouser
  ansible.builtin.file:
    path: "/etc/letsencrypt"
    state: directory
    owner: root
    group: root
    mode: "0700"

- name: "Create Netcup Configuration"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "0600"
  with_items:
    - src: "templates/netcup_credentials.ini.j2"
      dest: "{{ certbot_netcup_credentials_path }}"

- name: "Check if certbot-dns-netcup plugin is installed"
  ansible.builtin.shell: "certbot plugins | grep dns-netcup"
  register: netcup_check
  ignore_errors: true
  changed_when: "netcup_check is failed"

- name: "Determine Certbot installation method"
  when: netcup_check is failed
  block:
    - name: "Check if Certbot is installed"
      ansible.builtin.command: which certbot
      changed_when: false
      failed_when: certbot_install_check_result.rc not in [0, 1]
      register: certbot_install_check_result

    - name: "Check if snapd is installed"
      ansible.builtin.command: which snap
      changed_when: false
      failed_when: snap_install_check_result.rc not in [0, 1]
      register: snap_install_check_result
      when:
        - certbot_install_check_result.rc is defined
        - certbot_install_check_result.rc == 0

    - name: "Check if Certbot is installed via snap"
      ansible.builtin.shell: "snap list | grep 'certbot '"
      register: certbot_snap_check
      ignore_errors: true
      changed_when: "certbot_snap_check is failed"
      when:
        - snap_install_check_result.rc is defined
        - snap_install_check_result.rc == 0

    - name: "Set detected Certbot installation method"
      ansible.builtin.set_fact:
        certbot_netcup_installed_by: "{{ 'snap' if certbot_snap_check.rc is defined and certbot_snap_check.rc == 0 else 'other' }}"
      when:
        - certbot_install_check_result.rc is defined
        - certbot_install_check_result.rc == 0

- name: "Assert Certbot is actually installed"
  ansible.builtin.assert:
    that: certbot_netcup_installed_by is defined
    fail_msg: "Certbot was not found on the target system!"
  when: netcup_check is failed

- name: "Install certbot-dns-netcup via pip"
  when:
    - netcup_check is failed
    - certbot_netcup_installed_by != 'snap'
  block:
    - name: "Install pip"
      ansible.builtin.include_role:
        name: geerlingguy.pip

    - name: "Install certbot-dns-netcup via pip"
      ansible.builtin.pip:
        name: certbot-dns-netcup

- name: "Install certbot-dns-netcup via snap"
  when:
    - netcup_check is failed
    - certbot_netcup_installed_by == 'snap'
  become: true
  block:
    - name: "Install certbot-dns-netcup"
      community.general.snap:
        name: certbot-dns-netcup
        classic: true

    - name: "Trust snap certbot-dns-netcup"
      ansible.builtin.command: "snap set certbot trust-plugin-with-root=ok"
      changed_when: false

    - name: "Connect certbot with certbot-dns-netcup"
      ansible.builtin.command: "snap connect certbot:plugin certbot-dns-netcup"
      changed_when: false

- name: "Create certs"
  ansible.builtin.include_tasks: create-cert.yml
  with_items: "{{ certbot_netcup_certs }}"
  when:
    - certbot_netcup_create_if_missing | bool
  loop_control:
    loop_var: cert_item
