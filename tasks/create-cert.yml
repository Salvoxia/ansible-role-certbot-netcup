---
- name: "Extract first domain from domain list"
  ansible.builtin.set_fact:
    first_domain: "{{ cert_item.domains | first | replace('*.', '') }}"

- name: "Check if certificate already exists."
  ansible.builtin.stat:
    path: /etc/letsencrypt/live/{{ first_domain }}/cert.pem
  register: letsencrypt_cert

- name: "Create pre and post hooks for domain"
  when:
    - cert_item.services is defined
    - cert_item.services
  block:
    - name: "Ensure pre and post hook folders exist."
      ansible.builtin.file:
        path: /etc/letsencrypt/domain-renewal-hooks/{{ first_domain }}
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: "Set domain services fact"
      ansible.builtin.set_fact:
        certbot_netcup_domain_services: "{{ cert_item.services }}"

    - name: "Create hook to stop services."
      ansible.builtin.template:
        src: stop_services.sh.j2
        dest: /etc/letsencrypt/domain-renewal-hooks/{{ first_domain }}/stop_services.sh
        owner: root
        group: root
        mode: "0750"

    - name: "Create hook to start services."
      ansible.builtin.template:
        src: start_services.sh.j2
        dest: /etc/letsencrypt/domain-renewal-hooks/{{ first_domain }}/start_services.sh
        owner: root
        group: root
        mode: "0750"

- name: 'Log certbot command'
  ansible.builtin.debug:
    msg: '{{ certbot_create_command }}'
  when: not letsencrypt_cert.stat.exists

- name: "Generate new certificate if one doesn't exist."
  ansible.builtin.command: "{{ certbot_create_command }}"
  when: not letsencrypt_cert.stat.exists
  changed_when: false
